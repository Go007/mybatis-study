<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hong.mybatis.dao.OrderMapperDynamicSql">
    <!--
• if:判断
• choose (when, otherwise):分支选择；带了break的swtich-case
    如果带了id就用id查，如果带了lastName就用lastName查;只会进入其中一个
• trim 字符串截取(where(封装查询条件), set(封装修改条件))
• foreach 遍历集合
     -->

    <!-- 查询订单，要求，携带了哪个字段查询条件就带上这个字段的值 -->
    <select id="getOrdersByConditionIf" resultType="com.hong.mybatis.bean.Order">
        select * from t_order
        <!-- where -->
        <where>
            <!-- test：判断表达式（OGNL）
            OGNL参照PPT或者官方文档。
                   c:if  test
            从参数中取值进行判断

            遇见特殊符号应该去写转义字符：
            &&：
            -->
            <if test="id!=null">
                id=#{id}
            </if>
            <if test="orderNum!=null &amp;&amp; orderNum!=&quot;&quot;">
                and order_num = #{orderNum}
            </if>
            <if test="userId!=null">
                and user_id = #{userId}
            </if>
            <if test="orderContent!=null and orderContent.trim()!=&quot;&quot;">
                and order_content=#{orderContent}
            </if>
            <!-- ognl会进行字符串与数字的转换判断  "0"==0 -->
            <if test="orderStatus==0 or orderStatus==1">
                and order_status=#{orderStatus}
            </if>
        </where>
    </select>

    <select id="getOrdersByConditionTrim" resultType="com.hong.mybatis.bean.Order">
        select * from t_order
        <!-- 后面多出的and或者or where标签不能解决
        prefix="":前缀：trim标签体中是整个字符串拼串 后的结果。
                prefix给拼串后的整个字符串加一个前缀
        prefixOverrides="":
                前缀覆盖： 去掉整个字符串前面多余的字符
        suffix="":后缀
                suffix给拼串后的整个字符串加一个后缀
        suffixOverrides=""
                后缀覆盖：去掉整个字符串后面多余的字符

        -->
        <!-- 自定义字符串的截取规则 -->
        <trim prefix="where" suffixOverrides="and">
            <if test="id!=null">
                id=#{id} and
            </if>
            <if test="orderNum!=null &amp;&amp; orderNum!=&quot;&quot;">
                 order_num = #{orderNum} and
            </if>
            <if test="userId!=null">
                  user_id = #{userId} and
            </if>
            <if test="orderContent!=null and orderContent.trim()!=&quot;&quot;">
                  order_content=#{orderContent} and
            </if>
            <if test="orderStatus==0 or orderStatus==1">
                  order_status=#{orderStatus}
            </if>
        </trim>
    </select>

    <select id="getOrdersByConditionChoose" resultType= "com.hong.mybatis.bean.Order">
        select * from t_order
        <where>
            <!-- 如果带了id就用id查，如果带了userId 就用 userId 查;只会进入其中一个 -->
            <choose>
                <when test="id!=null">
                    id=#{id}
                </when>
                <when test="userId!=null">
                    user_id=#{userId}
                </when>
                <when test="orderNum!=null">
                    order_num = #{orderNum}
                </when>
                <otherwise>
                    order_status = 1
                </otherwise>
            </choose>
        </where>
    </select>

    <update id="updateSelective">
        <!-- Set标签的使用 -->
        update t_order
        <set>
            <if test="orderContent != null">
                order_content=#{orderContent},
            </if>
            <if test="orderStatus!=null">
                order_status=#{orderStatus},
            </if>
        </set>
        where id=#{id}
        <!--
                Trim：更新拼串
                update t_order
                <trim prefix="set" suffixOverrides=",">
                    <if test="orderContent!=null">
                        order_content=#{orderContent},
                    <if test="orderStatus!=null">
                         order_status=#{orderStatus},
                     </if>
                </trim>
                where id=#{id}  -->
    </update>

    <select id="getOrdersByConditionForeach" resultType="com.hong.mybatis.bean.Order">
        select * from t_order
        <!--
            collection：指定要遍历的集合：
                list类型的参数会特殊处理封装在map中，map的key就叫list
            item：将当前遍历出的元素赋值给指定的变量
            separator:每个元素之间的分隔符
            open：遍历出所有结果拼接一个开始的字符
            close:遍历出所有结果拼接一个结束的字符
            index:索引。遍历list的时候是index就是索引，item就是当前值
                          遍历map的时候index表示的就是map的key，item就是map的值

            #{变量名}就能取出变量的值也就是当前遍历出的元素
          -->
        <foreach collection="ids" item="item_id" separator=","
                 open="where id in(" close=")">
            #{item_id}
        </foreach>
    </select>

</mapper>
